# migrating

<font color="gray">This section is about migrating from older gitolite to
"g3".  If you're migrating from gitosis, see [here][gsmigr].</font>

First things first: g2 will be supported for a good long time for critical
bugs, although enhancements and new features won't happen.

If you're an existing (gitolite v1.x or v2.x) user, and wish to migrate , here
are the steps:

## pre-migration checks

1.  Check the [dev-status][] page to make sure all the features you want have
    been implemented in g3.

2.  Read the [pre-migration][g2migr] page to see what changes affect you and
    your users, and how much time it might take you to migrate.  (The closer
    you were to a default install of the old gitolite, the less time a
    migration will take.)

    This includes at least running `check-g2-compat` to see what are the big
    issues you might need to address during the migration.

    In particular, note if you use any variables that the pre-migration
    checklist describes as "requires presetting".

## the actual migration

(Note: You may also like the [example migration][g2migr-example] page).

**Note**: nothing in any of the gitolite install/setup/etc will ever touch the
*data* in any repository except the gitolite-admin repo.  The only thing it
will normally touch in normal repos is the `update` hook.

**Note: all migration happens on the server; you do not need your
workstation**.

1.  Carefully wipe out the old gitolite:

      * The **code**

          * Delete or move away all the old gitolite scripts.  Check the path
            to the gl-auth-command in `~/.ssh/authorized_keys` if you forgot
            where you put them.

          * Delete or move away the two directories named in the two variables
            `GL_PACKAGE_CONF` and `GL_PACKAGE_HOOKS` in `~/.gitolite.rc`.

      * The **rc file**

          * Rename `~/.gitolite.rc` to something else.

      * The **admin repo**

          * clone `~/repositories/gitolite-admin.git` to someplace safe
          * then delete `~/repositories/gitolite-admin.git`

        (Make sure you do not delete any other repos!)

      * The **admin directory**.

          * If you need to preserve logs, move the ~/.gitolite/logs` directory
            somewhere else.

          * If you added any custom hooks and wish to preserve them, move the
            ~/.gitolite/hooks` directory somewhere else.

          * Delete `~/.gitolite`.

2.  Install gitolite g3; see [install][].

3.  If you're using any rc variables that the pre-migration checklist said
    would "require presetting", then read about [presetting][rc-preset] the rc
    file, and follow those instructions to create your new rc file.

4.  Setup gitolite; see [setup][].  However, the 'setup' step need not supply
    a private key.  You can run it as `gitolite setup -a admin`.

    NOTE: ignore any 'split conf not set, gl-conf present...' errors at this
    time.  You may see none, some, or many.  It does not matter right now.

5.  Make sure your gitolite-admin clone has the correct pubkey for the
    administrator in its `keydir` directory, then run [`gitolite push
    -f`][bypass] to overwrite the "default" admin repo created by the install.

    **NOTE that is `gitolite push` not `git push`!**

6.  Handle any errors, look for migration issues, etc., as described in the
    links at the top of this page.

    This also includes building up your new `~/.gitolite.rc` file.

You're done.
